Jake Woodlee
George Sarantinos

Databases Homework Assignment Number One

Chapter 1

Give examples of systems in which it may make sense to use traditional file processing instead of a database approach.
    Any system that needs a very little amount of data.  An example of this a graphing calculator, or a programmable keyboard.

    a. 'Course_number', 'Department', and 'Prerequisite_number' columns
    b. Yes, first remove the 'Department' column, since the Department is built into the 'Course_number'.  Then,
    concatenate the 'Prerequisite_number' onto the end of the 'Course_number', and then there is only one column that needs to be modified with the Department name change.

Chapter 2

What is the difference between a database schema and a database state?
    A database schema is not intended to change frequently because it is the overall conceptual design of the database.
    Conversely, a database state is the actual data stored in the database at a particular point in time, which is continually accessed and modified.

Discuss the different types of user-friendly interfaces and the types of users who typically use each.
    "Menu-Based Interfaces for Web Clients or Browsing"
        This allows users to formulate requests via a menu in a systematic, step based process.
        No query language knowledge is required, types of users include: any user requesting information
        from a database on the web.  Example: accessing insurance data online.

    "Forms-Based Interfaces"
        Naive users can fill out forms that allow for easy interaction with the database.  These forms can be created
        using special form-based languages.
        Example: Creating new social media entry or account.

    "Graphical User Interfaces"
        Typically, this is embodied in a diagram which a user can then manipulate in order to construct their query.
        Example, uploading photo and modifying database by dragging it into a box.

    "Natural Language Interfaces"
        A set of natural language commands that are interpreted into query commands.
        Example: Google search

    "Speech Input and Output"
        Audio input as a means to build a database query.  The query is build via
        a library of "predefined" words.
        Example: Amazon Alexa or inquiry in a telephone directory

    "Interfaces for Parametric Users"
        Short commands that are used to build queries, so that query entry is much faster.
        Similar to aliases in Bash, or other scripting languages.
        Example: Bank tellers can increase deposit or withdraw from a database with a few pre-programmed key strokes

    "Interfaces for DBA"
        Privileged commands that only the database administrator can run.

If you were designing a Web-based system to make airline reservations and sell airline tickets, which DBMS architecture would you choose from Section 2.5?
Why? Why would the other architectures not be a good choice?

    Three-tier or n-tier architecture would be best.  Having an intermediary layer between the database
    and the client web interface, increases security and allows for business related logic to occur.  Events such as
    payment or special reward programs can be computed on the intermediary layer.  We still want to use a database,
    and thus simple client/server architecture would not qualify.  For the 2 tier approach, attaching the business logic to the clientside,
    would leave room for security holes and inefficiency.

Chapter 3

Why are tuples in a relation not ordered?
    In Math, sets are unordered, and since a relation is a set of tuples, there is no order in a relation.
    Furthermore, "tuple ordering is not part of relation definition because a relation attempts to represent facts at a logical or abstract level." (Elmasri 64)

Why do we designate one of the candidate keys of a relation to be the primary key?
    The primary key is used to identify a tuple (often represented as a row in a table) in a relation (often represented as a table).  The primary key is
    usually selected by choosing the candidate key with a single or the least amount of attributes.

Define foreign key.  What is this concept used for?
    A foreign key is a value in a tuple that references a primary key of another relation.  It is used to create
    referential integrity, so that consistency among tuples holding the same values can be established.

Consider the relation CLASS(Course#, Univ_Section#, Instructor_name, Semester, Building_code, Room#, Time_period, Weekdays, Credit_hours).
This represents classes taught in a university, with unique Univ_section#s.
Identify what you think should be various candidate keys,
and write in your own words the conditions or assumptions under which each candidate key would be valid.
    We would assign the Univ_Section# and Course# to be candidate keys.  Our reasoning is as follows:
    The Univ_Section# refers to a single tuple in the CLASS relation, in other words, no two tuples in the relation share the same Univ_Section#.
    Similarly, the Course#, would likely only refer to a minimal amount of tuples in the relation.


Recent changes in privacy laws have disallowed organizations from using Social Security numbers to identify individuals unless certain restrictions are satisfied.
As a result, most U.S. universities cannot use SSNs as primary keys [except for financial data].
In practice, Sutend_id, a unique identifier assigned to every student,
is likely to be used as the primary key rather than SSN since Student_id can be used throughout the system.
C. What are the advantages and disadvantages of using generated [surrogate] keys?

    A disadvantage is that adding the Student_id attribute will now require the database to store more data, whereas before all that was needed as the SSN as the primary key.
    An advantage is that privacy would be heightened using the Student_id as a primary key.  Student information would not have to be queried using social security numbers; which is a very sensitive piece of data.
